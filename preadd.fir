circuit preadd :
  module preadd :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a_in : UInt<4>, flip b_in : UInt<4>, flip c_in : UInt<1>, s : UInt<4>, cout : UInt<1>}

    wire p : UInt<1>[5] @[pass.scala 12:28]
    p[0] <= UInt<1>("h0") @[pass.scala 12:28]
    p[1] <= UInt<1>("h0") @[pass.scala 12:28]
    p[2] <= UInt<1>("h0") @[pass.scala 12:28]
    p[3] <= UInt<1>("h0") @[pass.scala 12:28]
    p[4] <= UInt<1>("h0") @[pass.scala 12:28]
    wire g : UInt<1>[5] @[pass.scala 13:28]
    g[0] <= UInt<1>("h0") @[pass.scala 13:28]
    g[1] <= UInt<1>("h0") @[pass.scala 13:28]
    g[2] <= UInt<1>("h0") @[pass.scala 13:28]
    g[3] <= UInt<1>("h0") @[pass.scala 13:28]
    g[4] <= UInt<1>("h0") @[pass.scala 13:28]
    wire c : UInt<1>[5] @[pass.scala 14:28]
    c[0] <= UInt<1>("h0") @[pass.scala 14:28]
    c[1] <= UInt<1>("h0") @[pass.scala 14:28]
    c[2] <= UInt<1>("h0") @[pass.scala 14:28]
    c[3] <= UInt<1>("h0") @[pass.scala 14:28]
    c[4] <= UInt<1>("h0") @[pass.scala 14:28]
    wire stemp : UInt<1>[5] @[pass.scala 15:32]
    stemp[0] <= UInt<1>("h0") @[pass.scala 15:32]
    stemp[1] <= UInt<1>("h0") @[pass.scala 15:32]
    stemp[2] <= UInt<1>("h0") @[pass.scala 15:32]
    stemp[3] <= UInt<1>("h0") @[pass.scala 15:32]
    stemp[4] <= UInt<1>("h0") @[pass.scala 15:32]
    wire sout : UInt<1>[4] @[pass.scala 16:29]
    sout[0] <= UInt<1>("h0") @[pass.scala 16:29]
    sout[1] <= UInt<1>("h0") @[pass.scala 16:29]
    sout[2] <= UInt<1>("h0") @[pass.scala 16:29]
    sout[3] <= UInt<1>("h0") @[pass.scala 16:29]
    node _p_1_T = bits(io.a_in, 0, 0) @[pass.scala 18:22]
    node _p_1_T_1 = bits(io.b_in, 0, 0) @[pass.scala 18:35]
    node _p_1_T_2 = xor(_p_1_T, _p_1_T_1) @[pass.scala 18:27]
    p[1] <= _p_1_T_2 @[pass.scala 18:13]
    node _g_1_T = bits(io.a_in, 0, 0) @[pass.scala 19:22]
    node _g_1_T_1 = bits(io.b_in, 0, 0) @[pass.scala 19:35]
    node _g_1_T_2 = and(_g_1_T, _g_1_T_1) @[pass.scala 19:27]
    g[1] <= _g_1_T_2 @[pass.scala 19:13]
    node _p_2_T = bits(io.a_in, 1, 1) @[pass.scala 18:22]
    node _p_2_T_1 = bits(io.b_in, 1, 1) @[pass.scala 18:35]
    node _p_2_T_2 = xor(_p_2_T, _p_2_T_1) @[pass.scala 18:27]
    p[2] <= _p_2_T_2 @[pass.scala 18:13]
    node _g_2_T = bits(io.a_in, 1, 1) @[pass.scala 19:22]
    node _g_2_T_1 = bits(io.b_in, 1, 1) @[pass.scala 19:35]
    node _g_2_T_2 = and(_g_2_T, _g_2_T_1) @[pass.scala 19:27]
    g[2] <= _g_2_T_2 @[pass.scala 19:13]
    node _p_3_T = bits(io.a_in, 2, 2) @[pass.scala 18:22]
    node _p_3_T_1 = bits(io.b_in, 2, 2) @[pass.scala 18:35]
    node _p_3_T_2 = xor(_p_3_T, _p_3_T_1) @[pass.scala 18:27]
    p[3] <= _p_3_T_2 @[pass.scala 18:13]
    node _g_3_T = bits(io.a_in, 2, 2) @[pass.scala 19:22]
    node _g_3_T_1 = bits(io.b_in, 2, 2) @[pass.scala 19:35]
    node _g_3_T_2 = and(_g_3_T, _g_3_T_1) @[pass.scala 19:27]
    g[3] <= _g_3_T_2 @[pass.scala 19:13]
    node _p_4_T = bits(io.a_in, 3, 3) @[pass.scala 18:22]
    node _p_4_T_1 = bits(io.b_in, 3, 3) @[pass.scala 18:35]
    node _p_4_T_2 = xor(_p_4_T, _p_4_T_1) @[pass.scala 18:27]
    p[4] <= _p_4_T_2 @[pass.scala 18:13]
    node _g_4_T = bits(io.a_in, 3, 3) @[pass.scala 19:22]
    node _g_4_T_1 = bits(io.b_in, 3, 3) @[pass.scala 19:35]
    node _g_4_T_2 = and(_g_4_T, _g_4_T_1) @[pass.scala 19:27]
    g[4] <= _g_4_T_2 @[pass.scala 19:13]
    c[0] <= io.c_in @[pass.scala 21:9]
    node _stemp_1_T = xor(p[1], c[0]) @[pass.scala 23:23]
    stemp[1] <= _stemp_1_T @[pass.scala 23:17]
    node _c_1_T = and(c[0], p[1]) @[pass.scala 24:26]
    node _c_1_T_1 = or(g[1], _c_1_T) @[pass.scala 24:19]
    c[1] <= _c_1_T_1 @[pass.scala 24:13]
    node _stemp_2_T = xor(p[2], c[1]) @[pass.scala 23:23]
    stemp[2] <= _stemp_2_T @[pass.scala 23:17]
    node _c_2_T = and(c[1], p[2]) @[pass.scala 24:26]
    node _c_2_T_1 = or(g[2], _c_2_T) @[pass.scala 24:19]
    c[2] <= _c_2_T_1 @[pass.scala 24:13]
    node _stemp_3_T = xor(p[3], c[2]) @[pass.scala 23:23]
    stemp[3] <= _stemp_3_T @[pass.scala 23:17]
    node _c_3_T = and(c[2], p[3]) @[pass.scala 24:26]
    node _c_3_T_1 = or(g[3], _c_3_T) @[pass.scala 24:19]
    c[3] <= _c_3_T_1 @[pass.scala 24:13]
    node _stemp_4_T = xor(p[4], c[3]) @[pass.scala 23:23]
    stemp[4] <= _stemp_4_T @[pass.scala 23:17]
    node _c_4_T = and(c[3], p[4]) @[pass.scala 24:26]
    node _c_4_T_1 = or(g[4], _c_4_T) @[pass.scala 24:19]
    c[4] <= _c_4_T_1 @[pass.scala 24:13]
    io.cout <= c[4] @[pass.scala 26:12]
    sout[0] <= stemp[1] @[pass.scala 28:12]
    sout[1] <= stemp[2] @[pass.scala 28:12]
    sout[2] <= stemp[3] @[pass.scala 28:12]
    sout[3] <= stemp[4] @[pass.scala 28:12]
    node io_s_lo = cat(sout[1], sout[0]) @[pass.scala 30:22]
    node io_s_hi = cat(sout[3], sout[2]) @[pass.scala 30:22]
    node _io_s_T = cat(io_s_hi, io_s_lo) @[pass.scala 30:22]
    io.s <= _io_s_T @[pass.scala 30:9]

